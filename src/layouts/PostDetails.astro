---
import Layout from "@layouts/Layout.astro";
import Header from "@components/Header.astro";
import Footer from "@components/Footer.astro";
import Tag from "@components/Tag.astro";
import Datetime from "@components/Datetime";
import type { CollectionEntry } from "astro:content";

export interface Props {
  post: CollectionEntry<"blog">;
}

const { post } = Astro.props;

const { title, author, description, ogImage, pubDatetime, tags } = post.data;

const { Content } = await post.render();

const ogUrl = new URL(ogImage ? ogImage : `${title}.png`, Astro.url.origin)
  .href;
---

<Layout title={title} author={author} description={description} ogImage={ogUrl}>
  <Header activeNav="note"/>
  <div class="mx-auto flex w-full max-w-3xl justify-start px-2">
    <button
      class="focus-outline mt-4 mb-2 flex hover:opacity-75"
      onclick="history.back()"
    >
      <svg xmlns="http://www.w3.org/2000/svg"
        ><path
          d="M13.293 6.293 7.586 12l5.707 5.707 1.414-1.414L10.414 12l4.293-4.293z"
        ></path>
      </svg><span>Revenir en arri√®re</span>
    </button>
  </div>
  <div id="progression"></div>
  <main id="main-content">
    <h1 class="post-title">{title}</h1>
    <Datetime datetime={pubDatetime} size="lg" className="my-2" />
    <article id="article" role="article" class="prose mx-auto mt-8 max-w-3xl">
      <Content />
    </article>

    <ul class="tags-container">
      {tags.map(tag => <Tag name={tag} />)}
    </ul>
  </main>
  <Footer />
</Layout>

<style>
  main {
    @apply mx-auto w-full max-w-3xl px-4 pb-12;
  }
  .post-title {
    @apply text-2xl font-semibold text-skin-accent;
  }
  .tags-container {
    @apply my-8;
  }


/* Progress bar */
#progression {
  --scrollAmount: 0%;
  
  background-image: linear-gradient(120deg, #962424 0%, #ff7272 100%);
  width: var(--scrollAmount);

   /* background: linear-gradient(to right, #F24E1E var(--scrollAmount), transparent 0);
  width: 100%;
   */
  height: 3px;
  position: fixed;
  top: 0;
}
</style>

<script>
let processScroll = (): void => {
  let docElem = document.documentElement;
  let docBody = document.body;
  let scrollTop = docElem.scrollTop || docBody.scrollTop;
  let scrollBottom = (docElem.scrollHeight || docBody.scrollHeight) - window.innerHeight;
  let scrollPercent = (scrollTop / scrollBottom) * 100 + '%';
  document.getElementById("progression")!.style.setProperty("--scrollAmount", scrollPercent);
};

document.addEventListener('scroll', processScroll);
</script>